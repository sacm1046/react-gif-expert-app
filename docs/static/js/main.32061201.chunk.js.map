{"version":3,"sources":["componets/AddCategory.js","componets/GiftGridItem.js","helpers/getGifs.js","componets/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","value","setValue","onSubmit","e","preventDefault","trim","length","category","type","onChange","target","GiftGridItem","title","url","className","src","alt","getGifs","a","fetch","encodeURI","res","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","img","useFetchGifs","image","key","GiftExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"qNA2BeA,EAxBK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACXC,mBAAS,IADE,mBAC9BC,EAD8B,KACvBC,EADuB,KASrC,OACI,0BAAMC,SARW,SAAAC,GACjBA,EAAEC,iBACEJ,EAAMK,OAAOC,OAAS,IACtBR,GAAY,SAACS,GAAD,OAAeP,GAAf,mBAAyBO,OACrCN,EAAS,OAKT,2BACID,MAAOA,EACPQ,KAAK,OACLC,SAAU,SAAAN,GAAC,OAAIF,EAASE,EAAEO,OAAOV,YCNlCW,EATM,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC3B,OACI,yBAAKC,UAAU,6CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNHK,EAAO,uCAAG,WAAQV,GAAR,qBAAAW,EAAA,4DACJ,mCADI,SAEDC,MAAM,0CAAD,OAA2CC,UAAUb,GAArD,qBADR,mCACQ,eAFJ,cAEbc,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAId,EAAP,EAAOA,MAAOe,EAAd,EAAcA,OAAd,MAA4B,CAC9CD,KACAd,QACAC,IAAG,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBf,QARf,kBAUZW,GAVY,4CAAH,sDCuBLK,EAnBC,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACZR,mBAAS,CAC/BwB,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNhB,EAAQV,GACH2B,MAAK,SAAAC,GAAG,OAAIH,EAAS,CAClBT,KAAMY,EACNL,SAAS,SAIlB,CAACvB,IAEGwB,EDb2BK,CAAa7B,GAAjCoB,EAFgB,EAEtBJ,KAAcO,EAFQ,EAERA,QAEtB,OACI,oCACI,wBAAIhB,UAAU,uCAAuCP,GACpDuB,GAAW,uBAAGhB,UAAU,oCAAb,cACZ,yBAAKA,UAAU,aAEPa,EAAOF,KAAI,SAACY,GAAD,OACP,kBAAC,EAAD,eAAcC,IAAKD,EAAMX,IAAQW,UEgB1CE,EA3BO,WAAO,IAAD,EAEYxC,mBAAS,CAAC,cAFtB,mBAEjByC,EAFiB,KAELC,EAFK,KAWxB,OACI,oCACI,6CACA,kBAAC,EAAD,CAAa3C,YAAa2C,IAC1B,6BACA,4BAEQD,EAAWf,KAAI,SAAClB,GAAD,OACX,kBAAC,EAAD,CAAS+B,IAAK/B,EAAUA,SAAUA,UClB1DmC,IAASC,OAAO,kBAAC,EAAD,MAAmBC,SAASC,eAAe,U","file":"static/js/main.32061201.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategory }) => {\r\n    const [value, setValue] = useState('')\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (value.trim().length > 2) {\r\n            setCategory((category) => [value, ...category ]);\r\n            setValue(\"\");\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                value={value}\r\n                type=\"text\"\r\n                onChange={e => setValue(e.target.value)}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory","import React from 'react'\r\n\r\nconst GiftGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className='card  animate__animated animate__fadeInUp'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiftGridItem\r\n","export const getGifs = async ( category ) => {\r\n    const apyKey = 'LdTY3yN5wgkuo9bkXu3i44DHRCwiFKSK';\r\n    const res = await fetch(`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&&api_key=${apyKey}&&limit=10`);\r\n    const { data } = await res.json()\r\n\r\n    const gifs = data.map(({ id, title, images }) => ({\r\n        id,\r\n        title,\r\n        url: images?.downsized_medium.url\r\n    }))\r\n    return gifs\r\n}\r\n\r\n","import React from 'react'\r\nimport GiftGridItem from './GiftGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeInUp'>{category}</h3>\r\n            {loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map((image) => (\r\n                        <GiftGridItem key={image.id} {...image} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(img => setstate({\r\n                data: img,\r\n                loading: false\r\n            })\r\n\r\n            )\r\n    }, [category])\r\n\r\n    return state\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './componets/AddCategory'\r\nimport GifGrid from './componets/GifGrid'\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    /*     const handleAdd = () => {\r\n            setCategories([\r\n                ...categories,\r\n                'HanterXHanter'\r\n            ])\r\n        } */\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategory={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map((category) => (\r\n                        <GifGrid key={category} category={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp from './GiftExpertApp'\n\nReactDOM.render(<GiftExpertApp />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}